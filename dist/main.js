(()=>{"use strict";class e extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"bullet")}fire(e,t,s){this.body.setAllowGravity(!1),this.body.reset(e,t),this.setActive(!0),this.setVisible(!0),s?this.setVelocityX(500):s||this.setVelocityX(-500)}preUpdate(e,t){super.preUpdate(e,t),(this.x>=800||this.x<=0)&&(this.setActive(!1),this.setVisible(!1))}}class t extends Phaser.Physics.Arcade.Group{constructor(t){super(t.physics.world,t),this.createMultiple({classType:e,frameQuantity:30,active:!1,visible:!1,key:"bullet"})}shootBullet(e,t,s){const i=this.getFirstDead(!1);i&&i.fire(e,t,s)}}class s extends Phaser.Scene{constructor(){super(),this.player,this.cursors,this.faceRight,this.ennemyFaceRight,this.PlayerBulletGroup,this.EnnemyBulletGroup,this.bulletDelay,this.ennemy,this.timerText,this.timerTimeEvent,this.completedTime,this.playedTime,this.inGameBoolean,this.lvlOneSpawnPoint,this.nameLvlMap}preload(){this.load.image("tempBackground","assets/Map/Wasteland_Sky.png"),this.load.spritesheet("gunner","assets/TeamGunner/CHARACTER_SPRITES/Black/Gunner_Black_Full_Line2.png",{frameWidth:28,frameHeight:35}),this.load.image("bullet","assets/TeamGunner/EXTRAS/bullet.png"),this.load.spritesheet("ennemy","assets/TeamGunner/CHARACTER_SPRITES/Red/Gunner_Red_idle.png",{frameWidth:48,frameHeight:48}),this.load.image("map_assets","assets/Map/Wasteland.png"),this.load.tilemapTiledJSON("map1","assets/Map/Map1.json"),this.load.tilemapTiledJSON("map2","assets/Map/Map2.json"),this.load.tilemapTiledJSON("map3","assets/Map/Map3.json"),this.nameLvlMap=new Array,this.nameLvlMap.push("map3"),this.nameLvlMap.push("map2"),this.nameLvlMap.push("map1")}create(){this.createBackground(),this.createCharacter(),this.createAnims(),this.createALvl(),this.createSpawnPointLvl(180,380,400,750,300,500,150,600),this.SetUpTimer(),this.input.keyboard.on("keydown_W",this.stopAndSaveTimer,this),this.createEnnemy(),this.createAnimsEnnemy(),this.PlayerBulletGroup=new t(this),this.physics.add.overlap(this.ennemy,this.PlayerBulletGroup,this.enemyHit,null,this),this.createDelay(),this.cursors=this.input.keyboard.createCursorKeys(),console.log(this)}update(){this.movements(),this.ennemyMovements(),this.shoot(),this.checkingDelay()}createBackground(){this.add.image(i.width/2,i.height/2,"tempBackground")}createCharacter(){this.player=this.physics.add.sprite(35,400,"gunner"),this.faceRight=!0,this.player.setCollideWorldBounds(!0)}createALvl(){this.createLvlOneMap(),this.createLvlOneTileSet(),this.createLvlOnePlateform()}createLvlOneMap(){this.map=this.make.tilemap({key:this.nameLvlMap.pop()})}createLvlOneTileSet(){this.tileset=this.map.addTilesetImage("map_assets_js","map_assets")}createLvlOnePlateform(){this.mapLayer=this.map.createStaticLayer(0,this.tileset,0,0),this.mapLayer.setCollisionByExclusion([-1]),console.log(this.mapLayer),this.physics.add.collider(this.player,this.mapLayer)}createSpawnPointLvl(e,t,s,i,a,n,h,l){this.lvlOneSpawnPoint=new Array,this.lvlOneSpawnPoint.push(e),this.lvlOneSpawnPoint.push(t),this.lvlOneSpawnPoint.push(s),this.lvlOneSpawnPoint.push(i),this.lvlOneSpawnPoint.push(a),this.lvlOneSpawnPoint.push(n),this.lvlOneSpawnPoint.push(h),this.lvlOneSpawnPoint.push(l)}createEnnemy(){this.ennemy=this.physics.add.sprite(this.lvlOneSpawnPoint.pop(),this.lvlOneSpawnPoint.pop(),"ennemy"),this.faceRight=!0,this.ennemy.setCollideWorldBounds(!0),this.physics.add.collider(this.ennemy,this.mapLayer)}createDelay(){this.bulletDelay=a}checkingDelay(){this.bulletDelay<=a-1&&this.bulletDelay++}movements(){this.cursors.right.isDown?(this.faceRight=!0,this.player.setVelocityX(160),this.player.body.blocked.down&&this.player.anims.play("right",!0)):this.cursors.left.isDown?(this.faceRight=!1,this.player.setVelocityX(-160),this.player.body.blocked.down&&this.player.anims.play("left",!0)):(this.player.setVelocityX(0),this.faceRight?this.player.anims.play("idleRight",!0):this.player.anims.play("idleLeft",!0)),this.cursors.up.isDown&&this.player.body.blocked.down&&this.player.setVelocityY(-250),this.player.body.blocked.down||(this.faceRight?this.player.anims.play("jumpRight",!0):this.player.anims.play("jumpLeft",!0))}ennemyMovements(){this.player.x-this.ennemy.x>0?(this.ennemy.scaleX=1,this.ennemyFaceRight=!0):(this.ennemy.scaleX=-1,this.ennemyFaceRight=!1),this.ennemy.anims.play("idleEnnemy",!0)}shoot(){this.cursors.space.isDown&&this.bulletDelay==a&&(this.PlayerBulletGroup.shootBullet(this.player.x,this.player.y,this.faceRight),this.bulletDelay=0)}Ennemyshoot(){}enemyHit(e,t){console.log("ennemy hit"),this.lvlOneSpawnPoint.length<=0?this.switchMap():(e.x=this.lvlOneSpawnPoint.pop(),e.y=this.lvlOneSpawnPoint.pop(),t.destroy())}switchMap(){this.lvlOneSpawnPoint=new Array,this.createSpawnPointLvl(400,200,300,150,450,40,50,500),(this.nameLvlMap.length=0)?this.stopAndSaveTimer():(this.player.x=35,this.player.y=400,this.createALvl())}createAnims(){this.anims.create({key:"left",frames:this.anims.generateFrameNumbers("gunner",{start:14,end:19}),frameRate:10}),this.anims.create({key:"right",frames:this.anims.generateFrameNumbers("gunner",{start:20,end:25}),frameRate:10}),this.anims.create({key:"idleRight",frames:this.anims.generateFrameNumbers("gunner",{start:0,end:4}),frameRate:10}),this.anims.create({key:"idleLeft",frames:this.anims.generateFrameNumbers("gunner",{start:5,end:9}),frameRate:10}),this.anims.create({key:"jumpRight",frames:this.anims.generateFrameNumbers("gunner",{start:10,end:11}),frameRate:10}),this.anims.create({key:"jumpLeft",frames:this.anims.generateFrameNumbers("gunner",{start:12,end:13}),frameRate:10})}createAnimsEnnemy(){this.anims.create({key:"idleEnnemy",frames:this.anims.generateFrameNumbers("ennemy",{start:0,end:4}),frameRate:10})}SetUpTimer(){this.inGameBoolean=!0,this.playedTime=0,this.timerText=this.add.text(32,32,"Timer: "+this.formatTime(this.playedTime)),this.timerTimeEvent=this.time.addEvent({delay:1e3,callback:this.onEvent,callbackScope:this,loop:!0})}formatTime(e){var t=e%60;return`${Math.floor(e/60)}:${t=t.toString().padStart(2,"0")}`}onEvent(){!0===this.inGameBoolean&&(this.playedTime+=1,this.timerText.setText("Timer: "+this.formatTime(this.playedTime)))}stopAndSaveTimer(){console.log("COUCOUCOCUOCUC"),console.log("fdp"),this.inGameBoolean=!1,this.completedTime=this.playedTime}}const i={type:Phaser.AUTO,width:800,height:560,physics:{default:"arcade",arcade:{gravity:{y:300},debug:!1}},scene:s},a=10;new Phaser.Game(i)})();